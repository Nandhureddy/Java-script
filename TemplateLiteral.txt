Template literals:

These are called string literals which allows embedded expressions.
By using tempalte literals we can write multi-line strings.
It has template place holders.

syntax:

`String text line`
`string text ${expression} string text`

Template literals should be enclosed in between back-ticks (` `).
To escape back tick just put back slash before the backtick.
Here $ and { braces represents place holder.


Multi-line strings:
console.log('string text line 1\n' +
'string text line 2');
// "string text line 1
// string text line 2"

console.log(`string text line 1
string text line 2`);
// "string text line 1
// string text line 2"

Expression Interpolation:
Using Embeded expresion 
var a = 10;
var b = 10;
console.log('Twenty is ' + (a + b) + ' and\nnot ' + (2 * a + b) + '.');
// "Twenty is 20 and
// not 30."

Using template literals:

var a = 10;
var b = 10;
console.log(`twenty is ${a + b} and
not ${2 * a + b}.`);
// "twenty is 20 and
// not 30."
Tagged template literal:
tag `string text ${expression} string text`
tagFunction`Hello ${firstName} ${lastName}!`





